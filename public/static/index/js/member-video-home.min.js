$(function () {
    $('#scene_1').addClass('on');
    // if (temp_update) {
    //     diybox.alert({message: '该作品场景模板已变更，请您重新编辑素材，给您带来的不便敬请谅解。', closeBtn: !1})
    // }
    // if (G_status_preview && G_status_preview === 4) {
    //     render_process(temp_id, 2, function (response) {
    //         preVideoByURL(response.video_url, screen_type)
    //     })
    // }
    // $('#scenes-thumb').children('li').click(function () {
    //     $(this).addClass('on').siblings().removeClass('on');
    //     var scene_key = $(this).attr('data-scene-id');
    //     var scene_obj = $('#scene_' + scene_key);
    //     var scenes_detail = $('#scenes-detail');
    //     scene_obj.addClass('on').siblings().removeClass('on');
    //     var scroll_distance = scenes_detail.scrollTop() + scene_obj.offset().top - 265;
    //     scenes_detail.animate({scrollTop: scroll_distance}, 500)
    // }).eq(0).addClass('on');
    $('.sprt').mouseenter(function () {
        if (!$(this).hasClass('on')) {
            $(this).addClass('hover')
        }
    }).mouseleave(function () {
        if ($(this).hasClass('hover')) {
            $(this).removeClass('hover')
        }
    }).mousedown(function (e) {
        $('.sprt').removeClass('on');
        $(this).removeClass('hover');
        $(this).addClass('on');
        var has_image = parseInt($(this).find('img').eq(0).attr('data-has-image'));
        var scene_id = $(this).data('sceneId');
        $('#scene_' + scene_id).addClass('on').siblings().removeClass('on');
        //scroll_thumb(scene_id);
        if ($(this).hasClass('work-image') > 0 && has_image === 1) {
            dragging = !0;
            drag_type = 1;
            $(this).css({'cursor': 'move', 'z-index': 999});
            e.preventDefault();
            fromObj = $(this);
            var scenes_detail = $('#scenes-detail');
            var scenes_detail_offset = scenes_detail.offset();
            fromObj_scrollTop = scenes_detail.scrollTop();
            fromObj_offsetTop = scenes_detail_offset.top;
            fromObj_offsetLeft = scenes_detail_offset.left;
            fromObj_offsetRight = fromObj_offsetLeft + scenes_detail.width() - 120;
            fromObj_offsetBottom = fromObj_offsetTop + scenes_detail.height() - 100;
            max_scrollTop = scenes_detail[0].scrollHeight - scenes_detail.height();
            var positionDiv = fromObj.offset();
            fromObj.after('<div class="sprt droppable" style="position: absolute"></div>');
            fromObj.next().offset(positionDiv);
            originX = e.pageX;
            originY = e.pageY;
            offsetX = positionDiv.left;
            offsetY = positionDiv.top;
            offsetY_after_scroll = offsetY
        }
    });
    $('#material-tab').children('li').click(function () {
        generateTab1(this, 'contms')
    }).eq(0).trigger('click');
    $('.maincont').click(function () {
        if (clickable) {
            $('.maincont').css({marginRight: '75px'});
            $('#material-image').css({right: '-240px'});
            $('#material-music').css({right: '-240px'})
        }
    });
    $(document).mouseup(function (e) {
        if (auto_scroll === !0) {
            clearInterval(i_scroll);
            auto_scroll = !1
        }
        if (music_dragging) {
            var player = document.getElementById('player');
            player.currentTime = music_start;
            $('#audio-cut-play').children('i').removeClass('icon-play').addClass('icon-pause');
            player.play();
            $('#start-time').text(sec_format(music_start));
            $('#end-time').text(sec_format(music_start + temp_len));
            music_dragging = !1;
            return !1
        }
        if (dragging) {
            if (toObj == false) {
                imageMouseUp();
            }else {
                if ($(toObj).hasClass('my-image') && $(fromObj).hasClass('my-image')){
                    imageSort();
                }else {
                    imageMouseUp();
                }
            }

            // if (toObj != 0 && fromObj.hasClass('my-image') && toObj.hasClass('my-image')){
            //     imageSort();
            // }else{
            //     imageMouseUp();
            // }
        }
    });
    $(document).mousemove(function (e) {
        if (music_dragging) {
            new_offsetX = offsetX + e.pageX - originX;
            if (new_offsetX > 0 && new_offsetX < 520 - temp_len * 520 / music_len) {
                var start_time = Math.round(new_offsetX * music_len / 520);
                var end_time = Math.round(start_time + temp_len);
                fromObj.css('left', new_offsetX + 'px');
                fromObj.children('.lefttime').text(sec_format(start_time));
                fromObj.children('.righttime').text(sec_format(end_time));
                music_start = start_time
            }
            return !1
        }
        if (dragging) {
            new_offsetX = offsetX + e.pageX - originX;
            new_offsetY = offsetY + e.pageY - originY;
            if (drag_type) {
                if (new_offsetX > fromObj_offsetLeft && new_offsetX < fromObj_offsetRight) {
                    fromObj.offset({'left': new_offsetX})
                }
                if (new_offsetY < fromObj_offsetTop) {
                    if (auto_scroll === !1) {
                        i_scroll = setInterval(function () {
                            scrollTopByStep('#scenes-detail', -50, fromObj_offsetTop)
                        }, 100);
                        auto_scroll = !0
                    }
                } else if (new_offsetY > fromObj_offsetBottom) {
                    if (auto_scroll === !1) {
                        i_scroll = setInterval(function () {
                            scrollTopByStep('#scenes-detail', 50, fromObj_offsetBottom)
                        }, 100);
                        auto_scroll = !0
                    }
                } else {
                    if (auto_scroll === !0) {
                        clearInterval(i_scroll);
                        auto_scroll = !1
                    }
                    fromObj.offset({'top': new_offsetY})
                }
            } else {
                fromObj.offset({'left': new_offsetX});
                if (new_offsetY < toObj_offsetTop) {
                    if (auto_scroll === !1) {
                        i_scroll = setInterval(function () {
                            scrollTopByStep('#scenes-detail', -50, toObj_offsetTop)
                        }, 100);
                        auto_scroll = !0
                    }
                } else if (new_offsetY > toObj_offsetBottom) {
                    if (auto_scroll === !1) {
                        i_scroll = setInterval(function () {
                            scrollTopByStep('#scenes-detail', 50, toObj_offsetBottom)
                        }, 100);
                        auto_scroll = !0
                    }
                } else {
                    if (auto_scroll === !0) {
                        clearInterval(i_scroll);
                        auto_scroll = !1
                    }
                    fromObj.offset({'top': new_offsetY})
                }
            }
            toObj = !1;
            droppable = !1;
            $('.work-image').each(function (i) {
                if (drag_type) {
                    if (!$(this).is(fromObj)) {
                        var diffX = new_offsetX + 75 - $(this).offset().left;
                        var diffY = new_offsetY + 50 - $(this).offset().top;
                        if (diffX > 0 && diffX < 150 && diffY > 0 && diffY < 100) {
                            toObj = $(this);
                            toObj.addClass('droppable');
                            droppable = !0
                        } else {
                            $(this).removeClass('droppable')
                        }
                    }
                } else {
                    var diffX = new_offsetX + 60 - $(this).offset().left;
                    var diffY = new_offsetY + 40 - $(this).offset().top;
                    if (diffX > 0 && diffX < 150 && diffY > 0 && diffY < 100) {
                        toObj = $(this);
                        toObj.addClass('droppable');
                        droppable = !0
                    } else {
                        $(this).removeClass('droppable')
                    }
                }
            });

            $(".my-image").each(function (i) {
                if(!drag_type) {
                    if (!$(this).is(fromObj)) {
                        var diffX = new_offsetX + 75 - $(this).offset().left;
                        var diffY = new_offsetY + 50 - $(this).offset().top;
                        if (diffX > 0 && diffX < 150 && diffY > 0 && diffY < 100) {
                            toObj = $(this);
                            toObj.addClass('droppable');
                            droppable = !0
                        } else {
                            $(this).removeClass('droppable')
                        }
                    }
                }
            });
            return !1
        }
    });
    $('#music-nav').children('li').click(function () {
        cur_music_nav = this.id;
        generateTab(this, 'listm')
    });
    $('#current-music').children('i').click(function () {
        var player = $('#player')[0];
        if (player.paused === !0) {
            alert('paused')
        }
        if (player.played === !0) {
            alert('played')
        }
    });
    $('#upload-music').click(function () {
    }).mouseenter(function () {
        var tmp_string = cur_music_nav;
        $('#nav-private-music').trigger('click');
        cur_music_nav = tmp_string
    }).mouseleave(function () {
        $('#' + cur_music_nav).trigger('click')
    });
    $('#auto-tab').click(function () {
        if ($(this).hasClass('on')) {
            $(this).removeClass('on');
            autoTab = !1
        } else {
            $(this).addClass('on');
            autoTab = !0
        }
    });
    $('#save-video').click(function () {
        saveScenes(G_status_complete, G_scenes, temp_id, function (res) {
            if (res.error) {
                diybox.alert(res.msg)
            } else {
                var timestamp = new Date().getTime();
                G_last_save = Math.round(timestamp / 1000);
                diybox.msg(res.msg)
            }
        })
    });
    $("#pre-video").click(function () {
        if (G_status_complete < 3) {
            diybox.alert({message: '场景尚未编辑完毕！请检查图片是否全部上传。', closeBtn: !1})
        } else if (!G_status_pay) {
            show_pay_modal(temp_id, t_id, 2)
        } else if (G_status_preview === 4) {
            diybox.alert({message: '正在渲染，勿重复提交！', className: 'tips', closeButton: !1})
        } else if (G_last_save < G_last_render && G_status_preview == 5) {
            showVideo(temp_id, 2)
        } else {
            var msg = '';
            if (G_status_preview === 5) {
                msg = '您已改动模板内容，开始渲染将删除您之前渲染的预览视频，关闭网页不会对渲染产生影响，是否开始渲染？'
            } else if (G_status_preview < 5) {
                msg = '渲染预览视频需要您等待数十分钟，关闭网页不会对渲染产生影响，是否开始渲染？'
            } else {
                msg = '检测到渲染失败，关闭网页不会对渲染产生影响，是否开始渲染？'
            }
            var cancel_label = G_status_preview === 5 ? '预览已有视频' : '取消';
            var confirm_label = G_status_preview === 5 ? '重新渲染' : '开始渲染';
            diybox.confirm({
                message: msg,
                closeBtn: !1,
                buttons: {yes: confirm_label, no: cancel_label},
                yes: function () {
                    makeVideo(temp_id, 2, function (response) {
                        preVideoByURL(response.video_url, screen_type)
                    })
                },
                no: function () {
                    if (G_status_preview && G_status_preview === 5) {
                        showVideo(temp_id, 2)
                    }
                }
            })
        }
    });
    $("#make-video").click(function () {
        $.post('/index/member/serchNoEdit',{'id':temp_id},function (respons) {
            if (respons.status == 0) {
                diybox.alert({message: '场景尚未编辑完毕！', closeBtn: !1})
            }else{
                diybox.confirm({
                    message: '视频一旦生成则无法更改，需要重新购买，视频生成可能需要数个小时时间，请耐心等待！', closeBtn: !1, yes: function () {
                        var code = $('#code').val();
                        var vedio_name = $('#vedio_name').val();
                        if (code.length == 0){
                            diybox.msg("激活码不能为空");
                            return;
                        }
                        if (vedio_name.length == 0){
                            diybox.msg("请输入视频名称");
                            return;
                        }
                        $.post('/index/member/render',{'id':temp_id,'code':code,'vedio_name':vedio_name},function (res) {
                            if (res.status) {
                                diybox.alert({
                                    message: res.msg+'请点击<a href="/index/member/index/status/0">我的作品</a>查看',
                                    closeBtn: !1
                                })
                            }else {
                                diybox.alert({
                                    message: res.msg,
                                    closeBtn: !1
                                })
                            }
                        })
                    }
                });
            }
        });
        // if (G_status_complete < 3) {
        //     diybox.alert({message: '场景尚未编辑完毕！', closeBtn: !1})
        // } else if (!G_status_pay) {
        //     show_pay_modal(temp_id, t_id, 1)
        // } else {
        //     diybox.confirm({
        //         message: '视频一旦生成则无法更改，需要重新购买，视频生成可能需要数个小时时间，请耐心等待', closeBtn: !1, yes: function () {
        //             makeVideo(temp_id, 1, function (response) {
        //                 if (response.status === 6) {
        //                     diybox.alert({
        //                         message: '渲染成功，点击<a href="/member/video/my_work/5.html" target="_blank">我的作品</a>',
        //                         closeBtn: !1
        //                     })
        //                 } else {
        //                     diybox.alert({message: '制片失败，请重新制片', closeBtn: !1})
        //                 }
        //             })
        //         }
        //     })
        // }
    })
});

function imageSort() {
    dragging = !1;
    if (droppable) {
        sortImage(toObj,fromObj);
        toObj.addClass('on');
        toObj.removeClass('droppable');
        fromObj.removeClass('on');
        fromObj.offset({'left': offsetX, 'top': offsetY_after_scroll}).next().remove()

        droppable = !1;
        toObj.find('img').eq(0).one('load', function () {
            diybox.msg("保存成功");
        })
    }else {
        fromObj.offset({'left': offsetX, 'top': offsetY_after_scroll});
        fromObj.next().remove()
    }
    fromObj.css({'cursor': 'pointer', 'z-index': 0});
    return !1;
}

function sortImage(_tobj, _fobj, callback)
{
    var tdata = $(_tobj).data();
    var fdata = $(_fobj).data();
    var to_img = toObj.find('img').eq(1);
    var from_img = fromObj.find('img').eq(1);
    $.post('/index/member/sortImg', {
        'to_img': to_img.attr('_src'),
        'to_img_id': tdata.id,
        'from_img': from_img.attr('_src'),
        'from_img_id': fdata.id,
        // 'source': data.source,
        // 'img_id': data.img_id,
    }, function (response) {
        if (response.error) {
            diybox.alert(response.message);
            return !1
        }
        $(_tobj).attr('data-new_source', response.to_source);
        $(_fobj).attr('data-new_source', response.from_source);
        $(_tobj).find('img').eq(1).attr('_src', response.to_source);
        $(_fobj).find('img').eq(1).attr('_src', response.from_source);
        if (callback !== undefined) {
            $(_tobj).find('img').eq(0).attr('src',response.to_thum_img).one("load", callback);
            $(_fobj).find('img').eq(0).attr('src',response.from_thum_img).one("load", callback);
        } else {
            $(_tobj).find('img').eq(0).attr('src', response.to_thum_img);
            $(_fobj).find('img').eq(0).attr('src', response.from_thum_img);
        }
    }, 'json')
}

function scrollTopByStep(_obj, value, _offsetTop) {
    var _scrollTop = $(_obj).scrollTop();
    var new_scrollTop = _scrollTop + value;
    if (new_scrollTop >= 0 && new_scrollTop <= max_scrollTop) {
        $(_obj).scrollTop(new_scrollTop);
        if (drag_type) {
            offsetY_after_scroll -= value;
            fromObj.next().offset({'top': offsetY_after_scroll})
        }
        fromObj.offset({'top': _offsetTop})
    }
}

function imageMouseUp() {
    dragging = !1;
    if (droppable) {
        var fromImage = fromObj.find('img').eq(0);
        // var fromSrc = fromImage.attr('src');
        var toImage = toObj.find('img').eq(0);
        // var toSrc = toImage.attr('src');
        var fromDataSource = fromObj.attr('data-new_source');
        var toDataSource = toObj.attr('data-new_source');
        var fromDataOldSource = fromObj.attr('data-source');
        // if (!drag_type) {
        //     var tempArr = fromSrc.split('?');
        //     fromSrc = tempArr[0] + '?x-oss-process=image/resize,m_pad,h_100,w_150,color_E6E6E6';
        //     tempArr = toSrc.split('?');
        //     toSrc = tempArr[0] + '?x-oss-process=image/resize,m_pad,h_80,w_120,color_E6E6E6'
        // }
        var hasImage = parseInt(toImage.attr('data-has-image'));
        if (hasImage) {
            replaceImg(toObj, fromDataSource);
            if (drag_type) {
                replaceImg(fromObj, toDataSource)
            } else {
            }
            fromObj.offset({'left': offsetX, 'top': offsetY_after_scroll}).next().remove()
        } else {
            if (drag_type) {
                fromImage.attr('src',fromObj.data('source') ).css('opacity', 0.35);
                fromObj.removeAttr('data-new_source').removeAttr('data-cropped').attr('onclick', 'imgAdd(this,0)');
                var cur_sce_id = parseInt(fromObj.attr('data-scene-id'));
                var cur_sce_mat_id = parseInt(fromObj.attr('data-sce-mat-id'));
                // G_scenes.scenes[cur_sce_id].materials[cur_sce_mat_id].new_source = '';
                // G_scenes.scenes[cur_sce_id].materials[cur_sce_mat_id].cropped = '';
                replaceImg(toObj, fromDataSource, function () {
                    toImage.css('opacity', 1);
                });
                replaceImg(fromObj, fromDataOldSource);

                fromObj.offset({'left': offsetX, 'top': offsetY_after_scroll}).removeAttr('ondblclick').next().remove();
                toImage.attr('data-has-image', '1');
                fromImage.attr('data-has-image', '0');
                replaceTitle(fromObj, '双击编辑', '单击添加')
            } else {
                replaceImg(toObj, fromDataSource, function () {
                    toImage.attr('data-has-image', '1').css('opacity', 1)
                });
                fromObj.offset({'left': offsetX, 'top': offsetY_after_scroll}).next().remove();
                // inc_image_edit()
            }
            replaceTitle(toObj, '单击添加', '双击编辑');
            toObj.attr("ondblclick", 'imgEdit(this)').removeAttr('onclick')
        }
        $('.sprt').removeClass('on');
        toObj.addClass('on');
        toObj.removeClass('droppable');
        var scene_id = toObj.data('sceneId');
        $('#scene_' + scene_id).addClass('on').siblings().removeClass('on');
        //scroll_thumb(scene_id);
        droppable = !1;
        toImage.one('load', function () {
            diybox.msg("保存成功");
            // saveScenes(G_status_complete, G_scenes, temp_id, function (res) {
            //     if (res.error) {
            //         diybox.alert(res.msg)
            //     } else {
            //         var timestamp = new Date().getTime();
            //         G_last_save = Math.round(timestamp / 1000);
            //         diybox.msg(res.msg)
            //     }
            // })
        })
    } else {
        fromObj.offset({'left': offsetX, 'top': offsetY_after_scroll});
        fromObj.next().remove()
    }
    if (drag_type) {
        clickable = !1;
        setTimeout(function () {
            clickable = !0
        }, 1)
    } else {
        var ossfile = $('#ossfile');
        ossfile.offset({'top': fromObj_offsetTop});
        ossfile.css('overflow', 'auto')
    }
    fromObj.css({'cursor': 'pointer', 'z-index': 0});
    return !1
}

function replaceImg(_obj, source, callback)
{
    var data = $(_obj).data();
    var rw = data.width;
    var rh = data.height;

    $.post('/index/member/replaceImg', {
        'object': source,
        'rw': rw,
        'rh': rh,
        'type': drag_type,
        'source': data.source,
        'img_id': data.img_id,
    }, function (response) {
        if (response.error) {
            diybox.alert(response.data);
            return !1
        }
        // var cur_sce_id = parseInt($(_obj).attr('data-scene-id'));
        // var cur_sce_mat_id = parseInt($(_obj).attr('data-sce-mat-id'));
        // if (rw > 4096 || rh > 4096) {
        //     if (rw > rh) {
        //         rh = Math.round(rh * 4096 / rw);
        //         rw = 4096
        //     } else {
        //         rw = Math.round(rw * 4096 / rh);
        //         rh = 4096
        //     }
        // }

        $(_obj).attr('data-new_source', response.source);
        // $(_obj).attr('data-crop', response.crop);
        if (callback !== undefined) {
            $(_obj).find('img').eq(0).attr('src',response.thum_img).one("load", callback)
        } else {
            $(_obj).find('img').eq(0).attr('src', response.thum_img)
        }
    }, 'json')
}

function autoCrop(_obj, source, callback) {
    var data = $(_obj).data();
    var rw = data.width;
    var rh = data.height;
    $.post('/index/member/autoCrop', {
        'object': source,
        'rw': rw,
        'rh': rh,
        'type': drag_type,
        'source': data.source,
        'temp_id': temp_id
    }, function (response) {
        if (response.error) {
            diybox.alert(response.data);
            return !1
        }
        var cur_sce_id = parseInt($(_obj).attr('data-scene-id'));
        var cur_sce_mat_id = parseInt($(_obj).attr('data-sce-mat-id'));
        if (rw > 4096 || rh > 4096) {
            if (rw > rh) {
                rh = Math.round(rh * 4096 / rw);
                rw = 4096
            } else {
                rw = Math.round(rw * 4096 / rh);
                rh = 4096
            }
        }
        G_scenes.scenes[cur_sce_id].materials[cur_sce_mat_id].new_source = response.source + response.crop + '/resize,m_pad,h_' + rh + ',w_' + rw;
        G_scenes.scenes[cur_sce_id].materials[cur_sce_mat_id].cropped = '';
        G_scenes.scenes[cur_sce_id].materials[cur_sce_mat_id].cd = '';
        G_scenes.scenes[cur_sce_id].materials[cur_sce_mat_id].f = 0;
        $(_obj).attr('data-new_source', response.source);
        $(_obj).attr('data-crop', response.crop);
        if (callback !== undefined) {
            $(_obj).find('img').eq(0).attr('src','/images/111111/9/20180306\\514f6aa9db2751cce16b3fb54c120ec2.jpg').one("load", callback)
        } else {
            $(_obj).find('img').eq(0).attr('src', response.data + '/resize,m_pad,h_100,w_150,color_E6E6E6')
        }
    }, 'json')
}

function music_play(_obj) {
    var player = document.getElementById('player');
    var m_data = $(_obj).parent().data();
    var newSrc = m_data.music;
    var oldSrc = player.src;
    var isBGM = parseInt(m_data.id) === temp_bgm;
    var cur_music_icon = $('#current-music').find('i');
    if (newSrc === oldSrc) {
        if (player.paused) {
            $(_obj).removeClass('paused');
            if (isBGM) cur_music_icon.removeClass('icon-play').addClass('icon-pause');
            player.play()
        } else {
            $(_obj).addClass('paused');
            if (isBGM) cur_music_icon.removeClass('icon-pause').addClass('icon-play');
            player.pause()
        }
    } else {
        $('.music-li').removeClass('on').children('a').eq(0).removeClass('paused');
        $(_obj).parent().addClass('on');
        player.src = newSrc;
        if (isBGM) {
            cur_music_icon.removeClass('icon-play').addClass('icon-pause')
        } else {
            if (temp_bgm) {
                cur_music_icon.removeClass('icon-pause').addClass('icon-play')
            }
        }
        player.play()
    }
}

function bgm_play(_obj) {
    var player = document.getElementById('player');
    var newSrc = $(_obj).parent().attr('data-music');
    var oldSrc = player.src;
    var child_icon = $(_obj).children('i');
    var music_bgm = $('#music-' + temp_bgm);
    var music_bgm_a = music_bgm.children('a').eq(0);
    if (newSrc === oldSrc) {
        if (player.paused) {
            music_bgm_a.removeClass('paused');
            child_icon.removeClass('icon-play').addClass('icon-pause');
            player.play()
        } else {
            music_bgm_a.addClass('paused');
            child_icon.removeClass('icon-pause').addClass('icon-play');
            player.pause()
        }
    } else {
        $('.music-li').removeClass('on').children().eq(0).removeClass('paused');
        music_bgm.addClass('on');
        player.src = newSrc;
        child_icon.removeClass('icon-play').addClass('icon-pause');
        player.play()
    }
}

function rec_bgm() {
    diybox.confirm({
        message: '是否还原背景音乐为默认音乐', yes: function () {
            $('#current-music').data('music', '').attr('data-music', '').empty().append('<em><i class="icon-music"></i></em><a title="默认音乐">默认音乐</a>');
            temp_bgm = 0;
            music_start = 0;
            music_len = 0;
            $('#edit-audio').remove();
            $('#rec-bgm').remove();
            saveBgm();
            return !1
        }
    })
}

function add_bgm(_obj) {
    var m_data = $(_obj).parent().data();
    var m_titile = $(_obj).prev('a').text();
    var current_music = $('#current-music');
    current_music.data('music', m_data.file).attr('data-music', m_data.file).empty().append('<em onclick="bgm_play(this)"><i class="icon-play"></i></em>' + '<a title="' + m_titile + '">' + m_titile + '</a>');
    if (temp_bgm === 0) {
        current_music.after('<ins onclick="rec_bgm()" id="rec-bgm"><i class="icon-repeat tips" title="还原为默认音乐"></i></ins>');
        $('#current-music-title').append('<a style="display:none;" id="edit-audio" class="tips" title="音乐截选" href="javascript:audioEdit();">' + '<i class="icon-cog"></i>&nbsp;' + '<span id="start-time">0:00</span>-' + '<span id="end-time">' + sec_format(temp_len) + '</span>' + '</a>');
        $('.tips').tipsy({gravity: 's'})
    } else {
        $('#start-time').text('0:00');
        $('#end-time').text(sec_format(temp_len))
    }
    temp_bgm = parseInt(m_data.id);
    music_len = get_sec(m_data.length);
    music_start = 0;
    saveBgm();
    return !1
}

function saveBgm() {
    $.post('/index/member/saveBgm', {'id': temp_id, 'bgm': temp_bgm}, function (response) {
        if (response.error) {
            diybox.alert(response.msg);
            return !1
        }
        diybox.msg(response.msg, 1500);
        var timestamp = new Date().getTime();
        G_last_save = Math.round(timestamp / 1000);
        old_music_start = music_start
    }, 'json')
}

function generateTab(_obj, class_content) {
    $(_obj).addClass('on').siblings().removeClass('on');
    var data = $(_obj).data();
    if (data.content === 'private-music' && data.loadMusic === 0) loadPrivateMusics();
    $('#' + data.content).show().siblings('.' + class_content).hide()
}

function generateTab1(_obj, class_content) {
    $(_obj).addClass('on').siblings().removeClass('on');
    var data_content = $(_obj).attr('data-content');
    if (data_content === 'tutorial') {
        preVideoByURL('/static/videos/edit-tutorial.mp4', 2);
        return !1
    }
    $('.maincont').css({marginRight: '375px'});
    var target_obj = $('#' + data_content);
    if (data_content === 'material-image' && parseInt(target_obj.attr('data-load-img')) === 0) loadMaterials();
    if (data_content === 'material-music' && parseInt(target_obj.attr('data-load-music')) === 0) loadPublicMusics();
    target_obj.css({right: "60px"}).siblings('.' + class_content).css({right: "-240px"})
}

function loadMaterials() {
    $.get('/index/member/materials', function (response) {
        if (response.error) {
            diybox.alert(response.data);
            return !1
        }
        var material_image = $('#material-image');
        material_image.empty().append(response.data).attr('data-load-img', 1);
        $('.my-image').mousedown(function (e) {
            $(this).addClass('on').siblings().removeClass('on');
            dragging = !0;
            drag_type = 0;
            $(this).css({'cursor': 'move', 'z-index': 999});
            e.preventDefault();
            fromObj = $(this);
            var ossfile = $('#ossfile');
            fromObj_scrollTop = ossfile.scrollTop();
            fromObj_offsetTop = ossfile.offset().top;
            var scenes_detail = $('#scenes-detail');
            var scenes_detail_offset = scenes_detail.offset();
            toObj_offsetTop = scenes_detail_offset.top;
            toObj_offsetBottom = toObj_offsetTop + scenes_detail.height() - 100;
            max_scrollTop = scenes_detail[0].scrollHeight - scenes_detail.height();
            ossfile.css('overflow', 'visible');
            ossfile.offset({'top': fromObj_offsetTop - fromObj_scrollTop});
            var positionDiv = $(this).offset();
            fromObj.after('<div class="zprt droppable" style="position: absolute">' + fromObj.html() + '</div>');
            fromObj.next().offset(positionDiv);
            originX = e.pageX;
            originY = e.pageY;
            offsetX = positionDiv.left;
            offsetY = positionDiv.top;
            offsetY_after_scroll = offsetY;
            return !1
        })
    }, 'json')
}

function loadPrivateMusics(callback) {
    $.get('/index/member/musics', function (response) {
        if (response.error) {
            diybox.alert(response.data);
            return !1
        }
        var private_music = $('#private-music');
        private_music.empty();
        private_music.append(response.data);
        $('#nav-private-music').data('loadMusic', 1);
        if (callback !== undefined) callback()
    }, 'json')
}

function loadPublicMusics() {
    $.get('/index/member/publicMusics', function (response) {
        if (response.error) {
            diybox.alert(response.data);
            return !1
        }
        var public_music = $('#public-music');
        public_music.empty();
        public_music.append(response.data);
        $('.tips').tipsy({gravity: 's'});
        $('#public-music-nav').children('dd').click(function () {
            generateTab(this, 'public-music-list')
        });
        $('#material-music').attr('data-load-music', 1)
    }, 'json')
}

function sec_format(s) {
    var min = Math.floor(s / 60);
    var sec = s % 60;
    if (sec < 10) sec = '0' + sec;
    return min + ':' + sec
}

function inc_image_edit() {
    if (G_status_complete === 1) G_status_complete = 2;
    G_scenes.image_edit = parseInt(G_scenes.image_edit) + 1;
    $('#image-edited').text(G_scenes.image_edit);
    if (G_status_complete === 2 && G_scenes.image_edit === parseInt(G_scenes.image)) {
        $('#work-progress').hide();
        $('#work-complete').show();
        G_status_complete = 3;
    }
    $('.ysb').css('width', Math.round(G_scenes.image_edit / G_scenes.image * 100) + '%')
}

function render_process(tid, size, callback) {
    clearInterval(timer);
    var status_comment = {
        '0': '等待渲染',
        '1': '上传中',
        '2': '排队中',
        '3': '渲染中',
        '4': '渲染成功',
        '5': '正在合成',
        '6': '合成成功',
        '7': '加载中',
        '8': '生成成功',
        '9': '渲染失败'
    };
    var render_progress = $('#render-progress');
    render_progress.show();
    timer = setInterval(function () {
        $.get('/member/video/make_status?r=' + Math.random(), {'tid': tid, 'size': size}, function (response) {
            if (response.error) {
                clearInterval(timer);
                diybox.alert({message: response.msg, closeBtn: !1});
                return
            }
            render_progress.show();
            if (response.msg) {
                render_progress.children('em').text(response.msg + '......');
                if (response.status === 3) {
                    render_progress.children('span').show().children('ins').css('width', response.percent);
                    render_progress.children('b').show().text(response.percent)
                } else {
                    render_progress.children('span').hide();
                    render_progress.children('b').hide()
                }
            }
            document.title = "【" + status_comment[response.status] + "】" + _title;
            if (response.status === 6) {
                clearInterval(timer);
                G_status_preview = 5;
                if (callback && typeof callback === 'function') {
                    (callback)(response)
                }
            }
            if (response.status === 9) {
                G_status_preview = 6
            }
        }, 'json')
    }, 3000)
}

function showVideo(tid, size) {
    $.get('/member/video/getVideoPreURL?r=' + Math.random(), {'tid': tid, 'size': size}, function (response) {
        preVideoByURL(response.msg, screen_type)
    }, 'json')
}

function makeVideo(tid, size, callback) {
    $.post('/member/video/make', {'tid': tid, 'size': size}, function (response) {
        if (response.error) {
            diybox.alert({message: response.msg, closeBtn: !1});
            return !1
        } else {
            if (size === 2) {
                diybox.alert({message: response.msg, closeBtn: !1});
                var timestamp = new Date().getTime();
                G_last_render = Math.round(timestamp / 1000);
                G_status_preview = 4;
                render_process(tid, size, callback)
            } else {
                window.location.href = '/member/video/my_work/4.html'
            }
        }
    }, 'json')
}

function replaceTitle(_obj, old_str, new_str) {
    var obj_title = $(_obj).attr('title');
    new_title = obj_title.replace(old_str, new_str);
    $(_obj).attr('title', new_title)
}

function croll_thumb(scene_id) {
    var scenes_thumb_li = $('#scenes-thumb-' + scene_id);
    scenes_thumb_li.addClass('on').siblings().removeClass('on');
    var scenes_thumb = $('#scenes-thumb');
    var scroll_distance = scenes_thumb.scrollTop() + scenes_thumb_li.offset().top - 356;
    scenes_thumb.animate({scrollTop: scroll_distance}, 500, function () {
    })
}